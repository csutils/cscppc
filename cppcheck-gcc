#!/bin/bash
SELF="$0"

CPPCHECK_DEF_ARGS="--template=gcc --inline-suppr -I/usr/include -D__x86_64__"

test -n "$CPPCHECK"      || CPPCHECK="cppcheck"
test -n "$CPPCHECK_ARGS" || CPPCHECK_ARGS="$CPPCHECK_DEF_ARGS"

error() {
    printf "%s: error: %s\n" "$SELF" "$*" >&2
}

match() {
    grep "$@" > /dev/null
}

pick_defs_and_incs() {
    while [ 0 -lt $# ]; do
        if printf "%s\n" "$1" | match '^-include$'; then
            printf " '--include=%s'" "$2"
            shift; shift
            continue
        fi

        printf " '%s'\n" "$1" | grep -E "^ '(-D|-I)" | tr -d '\n'
        shift
    done
}

pick_source_files() {
    for i in "$@"; do
        printf " %s\n" "$i" | grep -E '\.(c|C|cc|cpp|cxx)$' | tr -d '\n'
    done
}

run_cmd() {
    if test -w /dev/fd/3; then
        printf "+" >&3
        for i in "$@"; do
            printf " '%s'" "$i" >&3
        done
        printf "\n" >&3
    fi

    "$@"
}

run_cppcheck() {
    C_FILES="`pick_source_files "$@"`"
    test -n "$C_FILES" || return 1

    if printf "%s\n" "$C_FILES" | match 'conftest.c'; then
        # avoid unnecessary delays when running autoconf checks
        return 0
    fi

    if printf "%s\n" "$C_FILES" | match 'CMakeFiles/CMakeTmp/testCXXCompiler.cxx'
    then
        # avoid a panic of CMake when checking basic functionality of CXX
        return 0
    fi

    eval run_cmd "$CPPCHECK" `pick_defs_and_incs "$@"` ${CPPCHECK_ARGS} $C_FILES
}

CC="/usr/bin/`basename "$0"`"
run_cmd "$CC" "$@"
EC=$?

run_cppcheck "$@"
exit $EC
